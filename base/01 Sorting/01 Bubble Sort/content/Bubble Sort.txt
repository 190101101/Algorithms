Bubble Sort

Genel Bakış:

Bubble Sort, sıralanacak listeyi ardışık eleman çiftlerini karşılaştırarak ve gerekirse takas yaparak sıralar.
Bu süreç, listenin sonuna kadar devam eder ve her geçişte en büyük eleman en sona "kabarcık" yaparak çıkar.
Adımlar:

Liste başından başlayarak iki komşu eleman karşılaştırılır.
Eğer ilk eleman ikinci elemandan büyükse, bu iki eleman yer değiştirir.
Bu işlem listenin sonuna kadar devam eder. Böylece, en büyük eleman listenin sonuna taşınmış olur.
Aynı işlem kalan elemanlar için tekrar edilir.
Bu süreç, listenin tamamı sıralanana kadar tekrarlanır.
Örnek:

Diyelim ki [5, 3, 8, 4, 2] listesini sıralıyoruz.
İlk geçiş:
5 ve 3 karşılaştırılır, yer değiştirir: [3, 5, 8, 4, 2]
5 ve 8 karşılaştırılır, yer değiştirmez: [3, 5, 8, 4, 2]
8 ve 4 karşılaştırılır, yer değiştirir: [3, 5, 4, 8, 2]
8 ve 2 karşılaştırılır, yer değiştirir: [3, 5, 4, 2, 8]
İkinci geçiş:
3 ve 5 karşılaştırılır, yer değiştirmez: [3, 5, 4, 2, 8]
5 ve 4 karşılaştırılır, yer değiştirir: [3, 4, 5, 2, 8]
5 ve 2 karşılaştırılır, yer değiştirir: [3, 4, 2, 5, 8]
Üçüncü geçiş:
3 ve 4 karşılaştırılır, yer değiştirmez: [3, 4, 2, 5, 8]
4 ve 2 karşılaştırılır, yer değiştirir: [3, 2, 4, 5, 8]
Dördüncü geçiş:
3 ve 2 karşılaştırılır, yer değiştirir: [2, 3, 4, 5, 8]
Beşinci geçiş:
Artık liste sıralanmış durumda.
Özellikler:

Zaman Kompleksitesi: Ortalama ve en kötü durum için O(n²) (Çünkü her eleman için n-1 karşılaştırma yapılıyor).
Alan Kompleksitesi: O(1) (Yerinde sıralama yapıldığı için ekstra bir alan kullanmaz).
Bubble Sort, basitliği ve anlaşılabilirliği nedeniyle eğitim amaçlı yaygın olarak kullanılır, ancak büyük veri setleri için verimli değildir.

